"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[61502],{67974:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>c,data:()=>s});var a=o(60362);const d={},c=(0,o(60654).A)(d,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[7]||(t[7]=(0,a.Lk)("h1",{id:"tuya-m8pro",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#tuya-m8pro"},[(0,a.Lk)("span",null,"Tuya M8Pro")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"M8Pro")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=Tuya"},{default:(0,a.k6)(()=>[...t[0]||(t[0]=[(0,a.eW)("Tuya",-1)])]),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"4 gang switch with LCD")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"switch (state), name, scene_name, mode, action")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/M8Pro.png",alt:"Tuya M8Pro"})])],-1))])]),t[8]||(t[8]=(0,a.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="switch-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l1-endpoint"><span>Switch (l1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l1&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l2-endpoint"><span>Switch (l2 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l2&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l3-endpoint"><span>Switch (l3 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l3</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l3&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l3&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l3&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l4-endpoint"><span>Switch (l4 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l4</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l4&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l4&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l4&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="name-text-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#name-text-l1-endpoint"><span>Name (text, l1 endpoint)</span></a></h3><p>Name for Switch 1. Value can be found in the published state on the <code>name_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;name_l1&quot;: NEW_VALUE}</code>.</p><h3 id="name-text-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#name-text-l2-endpoint"><span>Name (text, l2 endpoint)</span></a></h3><p>Name for Switch 2. Value can be found in the published state on the <code>name_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;name_l2&quot;: NEW_VALUE}</code>.</p><h3 id="name-text-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#name-text-l3-endpoint"><span>Name (text, l3 endpoint)</span></a></h3><p>Name for Switch 3. Value can be found in the published state on the <code>name_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;name_l3&quot;: NEW_VALUE}</code>.</p><h3 id="name-text-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#name-text-l4-endpoint"><span>Name (text, l4 endpoint)</span></a></h3><p>Name for Switch 4. Value can be found in the published state on the <code>name_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;name_l4&quot;: NEW_VALUE}</code>.</p><h3 id="scene-name-text-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#scene-name-text-l1-endpoint"><span>Scene name (text, l1 endpoint)</span></a></h3><p>Name for Scene 1. Value can be found in the published state on the <code>scene_name_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;scene_name_l1&quot;: NEW_VALUE}</code>.</p><h3 id="scene-name-text-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#scene-name-text-l2-endpoint"><span>Scene name (text, l2 endpoint)</span></a></h3><p>Name for Scene 2. Value can be found in the published state on the <code>scene_name_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;scene_name_l2&quot;: NEW_VALUE}</code>.</p><h3 id="scene-name-text-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#scene-name-text-l3-endpoint"><span>Scene name (text, l3 endpoint)</span></a></h3><p>Name for Scene 3. Value can be found in the published state on the <code>scene_name_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;scene_name_l3&quot;: NEW_VALUE}</code>.</p><h3 id="scene-name-text-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#scene-name-text-l4-endpoint"><span>Scene name (text, l4 endpoint)</span></a></h3><p>Name for Scene 4. Value can be found in the published state on the <code>scene_name_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;scene_name_l4&quot;: NEW_VALUE}</code>.</p><h3 id="mode-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-enum-l1-endpoint"><span>Mode (enum, l1 endpoint)</span></a></h3><p>Switch1 mode. Value can be found in the published state on the <code>mode_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;mode_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>switch_1</code>, <code>scene_1</code>, <code>smart_light_1</code>.</p><h3 id="mode-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-enum-l2-endpoint"><span>Mode (enum, l2 endpoint)</span></a></h3><p>Switch2 mode. Value can be found in the published state on the <code>mode_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;mode_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>switch_1</code>, <code>scene_1</code>, <code>smart_light_1</code>.</p><h3 id="mode-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-enum-l3-endpoint"><span>Mode (enum, l3 endpoint)</span></a></h3><p>Switch3 mode. Value can be found in the published state on the <code>mode_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;mode_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>switch_1</code>, <code>scene_1</code>, <code>smart_light_1</code>.</p><h3 id="mode-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-enum-l4-endpoint"><span>Mode (enum, l4 endpoint)</span></a></h3><p>Switch4 mode. Value can be found in the published state on the <code>mode_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;mode_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>switch_1</code>, <code>scene_1</code>, <code>smart_light_1</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>scene_1</code>, <code>scene_2</code>, <code>scene_3</code>, <code>scene_4</code>.</p>',35))])}]]),s=JSON.parse('{"path":"/devices/M8Pro.html","title":"Tuya M8Pro control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya M8Pro control via MQTT","description":"Integrate your Tuya M8Pro via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2024-10-31T20:34:53.000Z"},"git":{"updatedTime":1761392842000,"contributors":[{"name":"JaCh0o","username":"JaCh0o","email":"93714801+JaCh0o@users.noreply.github.com","commits":1,"url":"https://github.com/JaCh0o"}],"changelog":[{"hash":"f090c7babdbd7563d8a272abc55a703a72e30cb2","time":1761392842000,"email":"93714801+JaCh0o@users.noreply.github.com","author":"JaCh0o","message":"Add image of DOM-Z-105P (#4326)"}]},"filePathRelative":"devices/M8Pro.md"}')}}]);