"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[48778],{37449:(e,a,n)=>{n.r(a),n.d(a,{comp:()=>o,data:()=>l});var t=n(60362);const s={},o=(0,n(60654).A)(s,[["render",function(e,a){const n=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[a[8]||(a[8]=(0,t.Lk)("h1",{id:"eglo-99099",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#eglo-99099"},[(0,t.Lk)("span",null,"EGLO 99099")])],-1)),(0,t.Lk)("table",null,[a[6]||(a[6]=(0,t.Lk)("thead",null,[(0,t.Lk)("tr",null,[(0,t.Lk)("th"),(0,t.Lk)("th")])],-1)),(0,t.Lk)("tbody",null,[a[2]||(a[2]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Model"),(0,t.Lk)("td",null,"99099")],-1)),(0,t.Lk)("tr",null,[a[1]||(a[1]=(0,t.Lk)("td",null,"Vendor",-1)),(0,t.Lk)("td",null,[(0,t.bF)(n,{to:"/supported-devices/#v=EGLO"},{default:(0,t.k6)(()=>[...a[0]||(a[0]=[(0,t.eW)("EGLO",-1)])]),_:1})])]),a[3]||(a[3]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Description"),(0,t.Lk)("td",null,"3 groups remote controller")],-1)),a[4]||(a[4]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Exposes"),(0,t.Lk)("td",null,"action, action_group")],-1)),a[5]||(a[5]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Picture"),(0,t.Lk)("td",null,[(0,t.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/99099.png",alt:"EGLO 99099"})])],-1))])]),a[9]||(a[9]=(0,t.Lk)("h2",{id:"options",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#options"},[(0,t.Lk)("span",null,"Options")])],-1)),(0,t.Lk)("p",null,[(0,t.Lk)("em",null,[(0,t.bF)(n,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,t.k6)(()=>[...a[7]||(a[7]=[(0,t.eW)("How to use device type specific configuration",-1)])]),_:1})])]),a[10]||(a[10]=(0,t.Fv)('<ul><li><code>simulated_brightness</code>: Simulate a brightness value. If this device provides a brightness_move_up or brightness_move_down action it is possible to specify the update interval and delta. The action_brightness_delta indicates the delta for each interval. Example:</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">simulated_brightness</span><span class="token punctuation">:</span></span>\n<span class="line">  <span class="token key atrule">delta</span><span class="token punctuation">:</span> <span class="token number">20</span> <span class="token comment"># delta per interval, default = 20</span></span>\n<span class="line">  <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">200</span> <span class="token comment"># interval in milliseconds, default = 200</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>on</code>, <code>off</code>, <code>red</code>, <code>refresh</code>, <code>refresh_colored</code>, <code>blue</code>, <code>yellow</code>, <code>green</code>, <code>brightness_step_up</code>, <code>brightness_step_down</code>, <code>brightness_move_up</code>, <code>brightness_move_down</code>, <code>brightness_stop</code>, <code>recall_1</code>, <code>color_temperature_step_up</code>, <code>color_temperature_step_down</code>.</p><h3 id="action-group-numeric" tabindex="-1"><a class="header-anchor" href="#action-group-numeric"><span>Action group (numeric)</span></a></h3><p>Value can be found in the published state on the <code>action_group</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p>',7))])}]]),l=JSON.parse('{"path":"/devices/99099.html","title":"EGLO 99099 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"EGLO 99099 control via MQTT","description":"Integrate your EGLO 99099 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-06-27T19:46:17.000Z"},"git":{"updatedTime":1761392842000,"contributors":[{"name":"JaCh0o","username":"JaCh0o","email":"93714801+JaCh0o@users.noreply.github.com","commits":1,"url":"https://github.com/JaCh0o"}],"changelog":[{"hash":"f090c7babdbd7563d8a272abc55a703a72e30cb2","time":1761392842000,"email":"93714801+JaCh0o@users.noreply.github.com","author":"JaCh0o","message":"Add image of DOM-Z-105P (#4326)"}]},"filePathRelative":"devices/99099.md"}')}}]);